import{b as e}from"./index-FaVgdj3V.js";import{g as s,u as a,b as t}from"./user-D7V0nsbJ.js";import{_ as l}from"./GiForm-BWZRNfN-.js";import{G as r}from"./common-BtD_44m1.js";import{d as o,r as i,p as u,A as p,c as n,w as d,f as m,J as c,a as f,h,o as w,M as v}from"./index-BAyZi_co.js";import{u as g}from"./useResetReactive-NMdkdCz2.js";import{u as b}from"./useDept-CXLwDhMr.js";import{u as y}from"./useRole-BKbf4B3R.js";import{e as L}from"./encrypt-fe7GwHAY.js";const x=o({__name:"UserAddDrawer",emits:["save-success"],setup(o,{expose:x,emit:k}){const j=k,{width:R}=e(),_=i(""),q=i(!1),C=u((()=>!!_.value)),V=u((()=>C.value?"update user":"add user")),T=i(),{roleList:U,getRoleList:W}=y(),{deptList:A,getDeptList:D}=b(),O={form:{size:"large"},btns:{hide:!0}},[S,z]=g({gender:1,status:1}),F=p([{label:"username",field:"username",type:"input",props:{maxLength:64,showWordLimit:!0},rules:[{required:!0,message:"please enter the username"}]},{label:"nickname",field:"nickname",type:"input",props:{maxLength:30,showWordLimit:!0},rules:[{required:!0,message:"please enter the nickname"}]},{label:"password",field:"password",type:"input-password",props:{maxLength:32,showWordLimit:!0},rules:[{required:!0,message:"please enter the password"}],hide:()=>C.value},{label:"phone",field:"phone",type:"input",props:{maxLength:11}},{label:"email",field:"email",type:"input",props:{maxLength:255}},{label:"gender",field:"gender",type:"radio-group",options:r},{label:"department",field:"deptId",type:"tree-select",data:A,props:{allowClear:!0,allowSearch:!0,fallbackOption:!1,filterTreeNode:(e,s)=>!!s.title&&s.title.toLowerCase().includes(e.toLowerCase())},rules:[{required:!0,message:"please select the department"}]},{label:"role",field:"roleIds",type:"select",options:U,props:{multiple:!0,allowClear:!0,allowSearch:!0},rules:[{required:!0,message:"please select the role"}]},{label:"description",field:"description",type:"textarea",props:{maxLength:200,showWordLimit:!0,autoSize:{minRows:3,maxRows:5}}},{label:"status",field:"status",type:"switch",props:{type:"round",checkedValue:1,uncheckedValue:2,checkedText:"enable",uncheckedText:"disable"}}]),G=()=>{var e,s;null==(s=null==(e=T.value)?void 0:e.formRef)||s.resetFields(),z()},I=async()=>{var e,s;const l=S.password;try{return!(await(null==(s=null==(e=T.value)?void 0:e.formRef)?void 0:s.validate()))&&(C.value?(await a(S,_.value),v.success("update successfully")):(l&&(S.password=L(l)||""),await t(S),v.success("add successfully")),j("save-success"),!0)}catch(r){return S.password=l,!1}};return x({onAdd:async()=>{G(),A.value.length||await D(),U.value.length||await W(),_.value="",q.value=!0},onUpdate:async e=>{G(),_.value=e,A.value.length||await D(),U.value.length||await W();const{data:a}=await s(e);Object.assign(S,a),q.value=!0}}),(e,s)=>{const a=f("a-drawer");return w(),n(a,{visible:m(q),"onUpdate:visible":s[1]||(s[1]=e=>c(q)?q.value=e:null),title:m(V),"mask-closable":!1,"esc-to-close":!1,width:m(R)>=600?600:"100%",onBeforeOk:I,onClose:G},{default:d((()=>[h(m(l),{ref_key:"formRef",ref:T,modelValue:m(S),"onUpdate:modelValue":s[0]||(s[0]=e=>c(S)?S.value=e:null),options:O,columns:m(F)},null,8,["modelValue","columns"])])),_:1},8,["visible","title","width"])}}});export{x as _};
