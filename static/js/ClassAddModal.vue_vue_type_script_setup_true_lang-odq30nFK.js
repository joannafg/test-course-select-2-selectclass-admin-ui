import{b as e}from"./index-FaVgdj3V.js";import{g as s,u as a,a as l}from"./class-BxIprbNp.js";import{_ as t}from"./GiForm-BWZRNfN-.js";import{d as r,r as o,p as i,A as d,c as u,w as c,f as p,J as n,a as m,h as f,o as h,M as v}from"./index-BAyZi_co.js";import{u as g}from"./useResetReactive-NMdkdCz2.js";import{u as w}from"./useDept-CXLwDhMr.js";import{u as b}from"./useDict-ConFaTXJ.js";const y=r({__name:"ClassAddModal",emits:["save-success"],setup(r,{expose:y,emit:j}){const _=j,{width:x}=e(),R=o(""),D=o(!1),L=i((()=>!!R.value)),q=i((()=>L.value?"modify class":"add class")),C=o(),{class_status:k}=b("class_status"),{deptList:I,getDeptList:A}=w(),O={form:{size:"large"},btns:{hide:!0}},[S,U]=g({}),V=d([{label:"class name",field:"name",type:"input",props:{placeholder:"please enter the class name"},rules:[{required:!0,message:"please enter the class name"}]},{label:"class code",field:"code",type:"input",props:{placeholder:"please enter the class code"},rules:[{required:!0,message:"please enter the class code"}]},{label:"major ID",field:"majorId",type:"tree-select",data:I,props:{placeholder:"please enter the major ID",allowClear:!0,allowSearch:!0,fallbackOption:!1,filterTreeNode:(e,s)=>!!s.title&&s.title.toLowerCase().includes(e.toLowerCase())},rules:[{required:!0,message:"please enter the major ID"}]},{label:"grade",field:"grade",type:"input",props:{placeholder:"please enter the grade"},rules:[{required:!0,message:"please enter the grade"}]},{label:"description",field:"description",type:"textarea",props:{placeholder:"please enter the description",maxLength:200,showWordLimit:!0,autoSize:{minRows:3,maxRows:5}}},{label:"status",field:"status",type:"select",props:{placeholder:"please select the status"},options:k,rules:[{required:!0,message:"please select the status"}]}]),z=()=>{var e,s;null==(s=null==(e=C.value)?void 0:e.formRef)||s.resetFields(),U()},F=async()=>{var e,s;try{return!(await(null==(s=null==(e=C.value)?void 0:e.formRef)?void 0:s.validate()))&&(L.value?(await a(S,R.value),v.success("modify successfully")):(await l(S),v.success("add successfully")),_("save-success"),!0)}catch(t){return!1}};return y({onAdd:async()=>{await A(),z(),R.value="",D.value=!0},onUpdate:async e=>{z(),R.value=e;const{data:a}=await s(e);Object.assign(S,a),D.value=!0}}),(e,s)=>{const a=m("a-modal");return h(),u(a,{visible:p(D),"onUpdate:visible":s[1]||(s[1]=e=>n(D)?D.value=e:null),title:p(q),"mask-closable":!1,"esc-to-close":!1,width:p(x)>=600?600:"100%",draggable:"",onBeforeOk:F,onClose:z},{default:c((()=>[f(p(t),{ref_key:"formRef",ref:C,modelValue:p(S),"onUpdate:modelValue":s[0]||(s[0]=e=>n(S)?S.value=e:null),options:O,columns:p(V)},null,8,["modelValue","columns"])])),_:1},8,["visible","title","width"])}}});export{y as _};
